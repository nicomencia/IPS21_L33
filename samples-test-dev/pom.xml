<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>giis</groupId>
	<artifactId>samples-test-dev</artifactId>
	<version>1.0.19-master</version>
	<packaging>jar</packaging>
	<organization>
		<name>Grupo de Investigacion en Ingenieria del Software - Universidad de Oviedo</name>
		<url>http://giis.uniovi.es/</url>
	</organization>

	<name>samples-test-dev</name>
	<url>http://maven.apache.org</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>


	<dependencies>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<!-- pruebas junit con parametros -->
		<dependency>
			<groupId>pl.pragmatists</groupId>
			<artifactId>JUnitParams</artifactId>
			<version>1.1.1</version>
			<scope>test</scope>
		</dependency>
		<!-- lombok, para generar automaticamente getters y setters -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.18.2</version>
			<scope>provided</scope>
		</dependency>
		<!-- drivers de base de datos -->
		<dependency>
			<groupId>org.xerial</groupId>
			<artifactId>sqlite-jdbc</artifactId>
			<version>3.23.1</version>
		</dependency>
		<!-- Logs -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
		</dependency>
		<!-- UI swing -->
		<dependency>
			<groupId>com.miglayout</groupId>
			<artifactId>miglayout</artifactId>
			<version>3.5.5</version>
		</dependency>
		<!-- utilidades varias para manejo de objetos y json -->
		<dependency>
			<groupId>commons-dbutils</groupId>
			<artifactId>commons-dbutils</artifactId>
			<version>1.7</version>
		</dependency>
		<dependency>
			<groupId>commons-beanutils</groupId>
			<artifactId>commons-beanutils</artifactId>
			<version>1.9.3</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.9.5</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.7.0</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<!-- pruebas ut -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.21.0</version>
				<configuration>
					<testFailureIgnore>true</testFailureIgnore>
					<!-- Sets the VM argument line used when unit tests are run under JaCoCo -->
					<argLine>${surefireArgLine}</argLine>
					<redirectTestOutputToFile>true</redirectTestOutputToFile>
					<!--para evitar fallos con openjdk en linux-->
                	<useSystemClassLoader>false</useSystemClassLoader>
				</configuration>
			</plugin>
			<!-- pruebas it: https://dzone.com/articles/integration-tests-with-maven -->
			<plugin>
				<!-- definicion de localizacion pruebas it segun convenio maven -->
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.12</version>
				<executions>
					<!-- ignorar error si eclipse senyala uno en este punto -->
					<execution>
						<id>add-test-source</id>
						<phase>process-resources</phase>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/it/java</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- jacoco plugin for code coverage, ut, it. Ver: https://www.petrikainulainen.net/programming/maven/creating-code-coverage-reports-for-unit-and-integration-tests-with-the-jacoco-maven-plugin/ -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.1</version>
				<configuration>
					<excludes>
						<exclude>**/TableColumnAdjuster.*</exclude>
					</excludes>
				</configuration>
				<executions>
					<execution>
						<id>pre-unit-test</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<destFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</destFile>
							<propertyName>surefireArgLine</propertyName>
						</configuration>
					</execution>
					<execution>
						<id>post-unit-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
							<outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
						</configuration>
					</execution>
					<!-- reports consolidados ut+it -->
					<execution>
						<id>jacoco-merge</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>merge</goal>
							<goal>report</goal>
						</goals>
						<configuration>
							<excludes>
								<exclude>**/TableColumnAdjuster.*</exclude>
							</excludes>
							<destFile>${project.build.directory}/coverage-reports/jacoco.exec</destFile>
							<fileSets>
								<fileSet>
									<directory>${project.build.directory}/coverage-reports</directory>
									<includes>
										<include>*.exec</include>
									</includes>
								</fileSet>
							</fileSets>
							<dataFile>${project.build.directory}/coverage-reports/jacoco.exec</dataFile>
							<outputDirectory>${project.reporting.outputDirectory}/jacoco</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- reports test ut (surefire) e it (failsafe) -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>2.21.0</version>
				<executions>
					<execution>
						<id>ut-reports</id>
						<phase>test</phase>
						<goals>
							<goal>report-only</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Otras tareas realizadas con ant -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<!-- creacion de carpeta para screenshots -->
					<execution>
						<id>screenshots</id>
						<phase>pre-integration-test</phase>
						<configuration>
							<target>
								<delete dir="target/screenshots" />
								<mkdir dir="target/screenshots" />
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					<!-- Reports de test (ut+it) estilo junit (al final del todo en install, 
						cuando ya se han ejecutado todas las pruebas) -->
					<execution>
						<id>junit-reports</id>
						<phase>install</phase>
						<configuration>
							<target>
								<junitreport todir="target/surefire-reports">
									<fileset dir="target/surefire-reports">
										<include name="**/*.xml" />
									</fileset>
									<report format="frames" todir="target/site/junit-frames" />
									<report format="noframes"
										todir="target/site/junit-noframes" />
								</junitreport>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					<!-- distribucion de codigo fuente zip para usar desde eclipse -->
					<execution>
						<id>src-for-eclipse</id>
						<phase>install</phase>
						<configuration>
							<target>
								<zip
									destfile="${project.build.directory}/${project.build.finalName}.zip">
									<zipfileset dir="src" prefix="src" />
									<zipfileset dir=".settings" prefix=".settings" />
									<zipfileset file="pom.xml" />
									<zipfileset file="assembly.xml" />
									<zipfileset file="index.html" />
									<zipfileset file=".gitignore" />
									<zipfileset file=".classpath" />
									<zipfileset file=".project" />
									<zipfileset file="sonar-project.properties" />
								</zip>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>org.apache.ant</groupId>
						<artifactId>ant-junit</artifactId>
						<version>1.10.8</version>
					</dependency>
					<dependency>
						<groupId>org.apache.ant</groupId>
						<artifactId>ant-trax</artifactId>
						<version>1.8.0</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>license-maven-plugin</artifactId>
				<version>1.16</version>
			</plugin>
			<!-- Generacion de documentacion javadoc, incluyendo un jar -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>3.0.1</version>
				<configuration>
					<overview>${basedir}/src/main/java/overview.html</overview>
					<sourcepath>${basedir}/src/main/java;${basedir}/src/test/java;${basedir}/src/it/java</sourcepath>
					<outputDirectory>${project.reporting.outputDirectory}/apidocs</outputDirectory>
					<show>private</show>
					<nohelp>true</nohelp>
					<additionalJOption>-Xdoclint:none</additionalJOption>
				</configuration>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<phase>install</phase>
						<goals>
							<!-- <goal>javadoc</goal> goal jar ya incluye generacion de javadoc -->
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- empaqueta en un zip documentacion, index y archivos jar que seran accesibles desde web -->
			<plugin>
            <artifactId>maven-assembly-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>install</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <appendAssemblyId>false</appendAssemblyId>
							<finalName>assembly</finalName>
                            <descriptors>
                                <descriptor>assembly.xml</descriptor>
                            </descriptors>
                        </configuration>
                    </execution>
                </executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											build-helper-maven-plugin
										</artifactId>
										<versionRange>
											[1.12,)
										</versionRange>
										<goals>
											<goal>add-test-source</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>
